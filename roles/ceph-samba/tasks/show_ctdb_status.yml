---
- name: wait for CTDB to go healthy
  run_once: true
  wait_for:
    delay: 30  #we wait enough time for ctdb to recover and start hosting VIP
    timeout: 0

- name: get ctdb status from the first node
  command: ctdb status
  register: ctdb_status
  changed_when: false
  delegate_to: "{{ groups[smb_group_name][0] }}"
  run_once: true
  
- name: "show ctdb status for cluster {{ cluster }}"
  debug:
    msg: "{{ ctdb_status.stdout_lines }}"
  delegate_to: "{{ groups[smb_group_name][0] }}"
  run_once: true
  when: not ctdb_status.failed