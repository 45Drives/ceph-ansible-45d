---
- name: configure_shares - Domain Member Windows ACL 
  block:
    - name: configure_shares - Grant the SeDiskOperatorPrivilege Privilege
      shell: net rpc rights grant "Domain Admins" SeDiskOperatorPrivilege -U "{{ active_directory_info.domain_join_user }}"%"{{ active_directory_info.domain_join_password }}"
      run_once: true

    - name: configure_cephfs_backend | Get admin secret
      command: "ceph auth get-key client.admin"
      register: command_output_admin
      delegate_to: "{{ groups[mon_group_name][0] }}"
      changed_when: false

    - name: configure_cephfs_backend | Set admin secret fact
      set_fact:
        cephfs_admin_secret: "{{ command_output_admin.stdout }}"

    - name: configure_cephfs_backend | Ensure cephfs dir exists
      file:
        path: "{{ shared_storage_mountpoint }}/fsgw"
        state: directory
        mode: 0755

    - name: configure_cephfs_backend | Mount cephfs as admin user 
      mount:
        name: "{{ shared_storage_mountpoint }}/fsgw"
        src: "{{ groups[mon_group_name][0] }}:/fsgw"
        fstype: "ceph"
        opts: "name=admin,secret={{ cephfs_admin_secret }},_netdev"
        state: mounted

    - name: configure_shares - Create samba_shares paths and set ownership
      file:
        path: "{{ item.path }}"
        owner: "root"
        group: '{{ active_directory_info.workgroup|upper }}\Domain Admins'
        mode: '0770'
        state: directory
      run_once: true
      with_items:
        - "{{ samba_shares }}"

    - name: configure_cephfs_backend | Unmount cephfs as admin user 
      mount:
        name: "{{ shared_storage_mountpoint }}/fsgw"
        state: absent 

    # If using vfs_cephfs, use relative paths (i.e just the share name). note subdirs shares should be created manually
    - name: vfs_ceph share configuration
      block: 
      - name: configure_shares - create shares
        shell: net conf addshare {{ item.name }} /fsgw/{{ item.name }} writeable={{ item.writeable[:1] }} guest_ok={{ item.guest_ok[:1] }} "{{ item.comment }}"
        failed_when: false
        run_once: true
        loop: "{{ samba_shares }}"
    
      - name: configure_shares - add parameters vfs_objects
        shell: net conf setparm {{ item.name }} "vfs objects" ceph
        loop: "{{ samba_shares }}"
      
      - name: configure_shares - add parameters kernel share modes
        shell: net conf setparm {{ item.name }} "kernel share modes" no
        loop: "{{ samba_shares }}"

      - name: configure_shares - add parameters ceph config
        shell: net conf setparm {{ item.name }} ceph:config_file /etc/ceph/ceph.conf
        loop: "{{ samba_shares }}"
      
      - name: configure_shares - add parameters ceph user
        shell: net conf setparm {{ item.name }} ceph:user_id samba
        loop: "{{ samba_shares }}"

      when:
        - samba_cephfs_module | bool
    
    # If using kernel mount cephfs, use full path when creating share
    - name: configure_shares - create shares
      shell: net conf addshare {{ item.name }} {{ item.path }} writeable={{ item.writeable[:1] }} guest_ok={{ item.guest_ok[:1] }} "{{ item.comment }}"
      failed_when: false
      run_once: true
      loop: "{{ samba_shares }}"
      when:
        - not samba_cephfs_module | bool

  when:
    - windows_acl | bool
    - domain_member | bool


